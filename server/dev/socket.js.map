{"version":3,"sources":["../src/socket.js"],"names":["Express","require","app","bodyParser","Path","session","MongoDBStore","debug","store","uri","collection","on","e","console","log","set","module","exports","Router","maxAge","start","port","router","publicPath","process","env","PORT","get","req","res","next","url","use","static","json","secret","resave","saveUninitialized","sendFile","resolve","error","send","listen"],"mappings":";;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,UAAUJ,QAAQ,iBAAR,CAAhB;AACA,IAAMK,eAAeL,QAAQ,yBAAR,EAAmCI,OAAnC,CAArB;;eACcJ,QAAQ,WAAR,C;IAAPM,K,YAAAA,K;;AACP,IAAMC,QAAQ,IAAIF,YAAJ,CACb;AACCG,MAAK,kCADN;AAECC,aAAY;AAFb,CADa,CAAd;AAKAF,MAAMG,EAAN,CAAS,OAAT,EAAkB,UAAUC,CAAV,EAAa;AAC9BC,SAAQC,GAAR,CAAYF,CAAZ;AACA,CAFD;AAGAV,IAAIa,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;;AAEAC,OAAOC,OAAP,GAAiB;AAChBC,SAAQlB,QAAQkB,MADA;AAEhBb,UAAS;AACRc,UAAQ,QADA;AAERX;AAFQ,EAFO;AAMhBY,MANgB,uBAMkB;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACjCF,SAAOG,QAAQC,GAAR,CAAYC,IAAZ,IAAoBL,IAA3B;AACAnB,MAAIyB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC;AACAA;AACA,GAHD;AAIA5B,MAAIyB,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,OAAI,CAACvB,KAAL,EAAY;AACXqB,QAAIG,GAAJ,GAAUH,IAAIG,GAAJ,GAAU,KAApB;AACAF,QAAId,GAAJ,CAAQ,kBAAR,EAA4B,MAA5B;AACA;AACDe;AACA,GAND;AAOA5B,MAAI8B,GAAJ,CAAQhC,QAAQiC,MAAR,CAAeV,UAAf,CAAR;AACArB,MAAI8B,GAAJ,CAAQ7B,WAAW+B,IAAX,EAAR;AACAhC,MAAI8B,GAAJ,CAAQ3B,QAAQ;AACf8B,WAAQ,aADO;AAEfC,WAAQ,CAAC,CAAC,CAFK;AAGfC,sBAAmB,CAAC,CAAC,CAHN;AAIf7B;AAJe,GAAR,CAAR;AAMAN,MAAI8B,GAAJ,CAAQV,MAAR;AACApB,MAAI8B,GAAJ,CAAQ,UAACJ,GAAD,EAAMC,GAAN,EAAc;AACrBhB,WAAQC,GAAR,CAAYc,IAAIG,GAAhB;AACAF,OAAIS,QAAJ,CAAalC,KAAKmC,OAAL,CAAahB,UAAb,EAAyB,YAAzB,CAAb;AACA,GAHD;AAIArB,MAAI8B,GAAJ,CAAQ,UAACQ,KAAD,EAAQZ,GAAR,EAAaC,GAAb,EAAqB;AAC5BhB,WAAQC,GAAR,CAAYc,IAAIG,GAAhB;AACAlB,WAAQC,GAAR,CAAY0B,KAAZ;AACAX,OAAIY,IAAJ,CAAS,mBAAT;AACA,GAJD;AAKAvC,MAAIwC,MAAJ,CAAWrB,IAAX,EAAiB,YAAM;AACtBR,WAAQC,GAAR,6BAAsCO,IAAtC;AACA,GAFD;AAGA;AAxCe,CAAjB","file":"socket.js","sourcesContent":["\r\nconst Express = require('express');\r\nconst app = Express();\r\nconst bodyParser = require('body-parser');\r\nconst Path = require('path');\r\nconst session = require('express-session');\r\nconst MongoDBStore = require('connect-mongodb-session')(session);\r\nconst {debug}=require('./configs');\r\nconst store = new MongoDBStore(\r\n\t{\r\n\t\turi: 'mongodb://localhost:27017/client',\r\n\t\tcollection: 'Sessions',\r\n\t});\r\nstore.on('error', function (e) {\r\n\tconsole.log(e);\r\n});\r\napp.set('trust proxy', 1);\r\n\r\nmodule.exports = {\r\n\tRouter: Express.Router,\r\n\tsession: {\r\n\t\tmaxAge: 36000000,\r\n\t\tstore,\r\n\t},\r\n\tstart({port, router, publicPath,}){\r\n\t\tport = process.env.PORT || port;\r\n\t\tapp.get('*.mp4', (req, res, next) => {\r\n\t\t\t// console.log(req);\r\n\t\t\tnext();\r\n\t\t});\r\n\t\tapp.get('*.js', (req, res, next) => {\r\n\t\t\tif (!debug) {\r\n\t\t\t\treq.url = req.url + '.gz';\r\n\t\t\t\tres.set('Content-Encoding', 'gzip');\r\n\t\t\t}\r\n\t\t\tnext();\r\n\t\t});\r\n\t\tapp.use(Express.static(publicPath));\r\n\t\tapp.use(bodyParser.json());\r\n\t\tapp.use(session({\r\n\t\t\tsecret: 'Gakk1mylove',\r\n\t\t\tresave: !!0,\r\n\t\t\tsaveUninitialized: !!0,\r\n\t\t\tstore,\r\n\t\t}));\r\n\t\tapp.use(router);\r\n\t\tapp.use((req, res) => {\r\n\t\t\tconsole.log(req.url);\r\n\t\t\tres.sendFile(Path.resolve(publicPath, 'index.html'));\r\n\t\t});\r\n\t\tapp.use((error, req, res) => {\r\n\t\t\tconsole.log(req.url);\r\n\t\t\tconsole.log(error);\r\n\t\t\tres.send('invalid operation');\r\n\t\t});\r\n\t\tapp.listen(port, () => {\r\n\t\t\tconsole.log(`server is listening at ${port}.`);\r\n\t\t});\r\n\t},\r\n};"]}